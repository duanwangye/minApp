<?php
/**
 * Created by PhpStorm.
 * User: Duanwangye
 * Date: 18/09/21
 * Company:财联集惠
 */

namespace app\admin\logic;

use think\Db;
use think\Loader;
use tool\Common;
use app\core\model\Product as Model;
use app\core\model\ProductInformation;
use app\core\model\ProductReject;
use app\core\model\Master;
class Product extends Base
{
    /*
     * @name 产品列表
     * @param page  页数
     * @param size  每页个数
     * @param productName  产品名称
     * @param status  状态 0-下架 1-上架 2-分享专用
     * @param masterID  供应商ID
     * @param classID  分类ID
     */
   public function getlist() {
       $page = $this->app['page'];//当前页数
       $size = $this->app['size'];//每页显示数量

       $params_where = [];
       if( isset($this->app['productName']) ) {
           $params_where['product.productName'] = ['like','%'.$this->app['productName'].'%'];//产品名称查询
       }

       if (isset($this->app['status'])){
           $params_where['product.status'] = $this->app['status'];//产品状态查询
       }

       if (isset($this->app['masterID'])){
           $params_where['master.masterID'] = $this->app['masterID'];//供应商查询
       }

       if (isset($this->app['classID'])){
           $params_where['class.classID'] = $this->app['classID'];//分类查询
       }


       $list = Db::view('product',['productID','productName','costPrice','agentPrice','salePrice','commission','marketPrice','promType','salesSum','status','commentCount'])
           ->view('class','classID,className','product.classID = class.classID')
           ->view('master',['trueName' => 'masterName'],'product.masterID = master.masterID')
           ->where($params_where)
           ->limit(($page-1)*$size, $size)
           ->select();

       $count = Db::view('product')
           ->view('class','classID','product.classID = class.classID')
           ->view('master',['trueName' => 'masterName'],'product.masterID = master.masterID')
           ->where($params_where)
           ->count();

       return Common::rm(1, '操作成功', [
           'page'=>$page,
           'count'=>$count,
           'list'=>$list
       ]);
   }

    //新增/修改产品
   public function setProduct() {
       $params['masterID'] = $this->app['masterID'];
       $params['classID'] = $this->app['classID'];
       $params['productName'] = $this->app['productName'];
       $params['titleImg'] = $this->app['titleImg'];
       $params['contentImg'] = $this->app['contentImg'];
       $params['content'] = htmlspecialchars($this->app['content']);
       $params['costPrice'] = $this->app['costPrice'];
       $params['agentPrice'] = $this->app['agentPrice'];//代理价
       $params['salePrice'] = $this->app['salePrice'];
       $params['commission'] = $this->app['commission'];//佣金（返佣价）
       $params['marketPrice'] = $this->app['marketPrice'];
       $params['sort'] = $this->app['sort'];
       $params['promType'] = $this->app['promType'];
       $params['status'] = isset($this->app['status']) ? $this->app['status'] : 0;
       $params['useRules'] = $this->app['useRules'];//使用规则
       $params['validity'] = $this->app['validity'];//有效期
       $params['stock'] = $this->app['stock'];//库存
       //验证价格
       $price_validate = Loader::validate('PriceValidate');

       $validate_result = $price_validate->check($params);

       $master_info = Master::get([
           'masterID' => $params['masterID']
       ]);

       if($master_info['type'] != 2 ){
           return Common::rm(-1,'供应商ID错误');
       }

       if(!$validate_result){
           return Common::rm(-1,$price_validate->getError());
       }

       if (isset($this->app['productID'])){
           $params_where['productID'] = $this->app['productID'];
           $model = new Model();
           $result = $model->save($params,$params_where);
       }else{
           $result = Model::create($params);
       }


       if ($result){
           return Common::rm(1,'成功');
       }else{
           return Common::rm(-1,'失败');
       }
   }

    //获取产品详细信息
    public function getinfo() {
        $model = new Model();
        $params_where['productID'] = $this->app['productID'];
        $info = $model::with('classinfo,Master')
                ->field('productID,agentID,masterID,classID,content,productName,costPrice,agentPrice,salePrice,commission,marketPrice,promType,salesSum,status,commentCount')
                ->find($params_where);

        if (!empty($info['content'])) {
            $info['content'] = htmlspecialchars_decode($info['content']);
        }
        $info = $info->visible(['productID','master.trueName','classinfo.className','productName','costPrice','agentPrice','salePrice','commission','marketPrice','promType','salesSum','status','commentCount']);
        return Common::rm(1,'获取成功',$info);
    }

    /*
     * @name 通过/驳回产品添加的申请
     * @param InformationId  产品信息ID
     * @param status  状态 1-通过 -1-驳回
     * @param rejectReason  驳回理由
     */
    public function informationModify() {
        $info = ProductInformation::where('InformationId',$this->app['InformationId'])->value('status');

        if($info != config('status.product_status_wait')){
            return Common::rm(-1,'操作失败');
        }

        $params['status'] = $this->app['status'];

        if ($params['status'] == config('status.product_status_reject')){
            $params['rejectReason'] = $this->app['rejectReason'];
        }

        $params_where['InformationId'] = $this->app['InformationId'];
        $information_model = new ProductInformation();

        $save_result = $information_model->save($params,$params_where);

        if ($save_result){
            return Common::rm(-1,'修改成功');
        }else{
            return Common::rm(1,'修改失败');
        }

    }

    //查看驳回理由
    public function getRejectInfo() {
        $params['InformationId'] = $this->app['InformationId'];
        $information_info = ProductInformation::where('InformationId',$params['InformationId'])->find();

        return Common::rm(1,'查看成功',$information_info['rejectReason']);

    }

    //产品添加的信息列表
    public function informationList() {
        $page = $this->app['page'];//当前页数
        $size = $this->app['size'];//每页显示数量
        $product_infomation_model = new ProductInformation();

        $params_where = [];
        if( isset($this->app['status']) ) {
            $params_where['status'] = $this->app['status'];
        }

        $list = $product_infomation_model::with('agentinfo')
            ->limit(($page-1)*$size, $size)
            ->field('InformationId,agentId,productName,productPrice,supplierName,supplierTel,status')
            ->where($params_where)
            ->select();
        $count = $product_infomation_model->count();   //总条数

        return Common::rm(1, '操作成功', [
            'page'=>$page,
            'count'=>$count,
            'list'=>$list
        ]);
    }

}